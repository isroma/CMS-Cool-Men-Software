apiVersion: v1
kind: PersistentVolume
metadata:
  name: postgres-pv
  labels:
    type: local
  namespace: cms
spec:
  storageClassName: manual
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /data/postgres-pv

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  labels:
    type: local
  namespace: cms
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  volumeName: postgres-pv

---

apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: cms
spec:
  type: ClusterIP
  selector:
    app: postgres-container
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-deployment
  namespace: cms
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-container
  template:
    metadata:
      labels:
        app: postgres-container
        tier: backend
    spec:
      containers:
        - name: postgres-container
          image: postgres:latest
          env:
            - name: POSTGRES_USER
              value: postgres

            - name: POSTGRES_PASSWORD
              value: postgres

            - name: POSTGRES_DB
              value: postgres
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: postgres-volume-mount
              mountPath: /var/lib/postgresql/data

      volumes:
        - name: postgres-volume-mount
          persistentVolumeClaim:
            claimName: postgres-pvc

---

apiVersion: v1
kind: Service
metadata:
  name: elastic-service
  namespace: cms
spec:
  type: ClusterIP
  selector:
    app: elastic-container
  ports:
    - protocol: TCP
      port: 9200
      targetPort: 9200

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: elastic-deployment
  namespace: cms
spec:
  replicas: 1
  selector:
    matchLabels:
      app: elastic-container
  template:
    metadata:
      labels:
        app: elastic-container
    spec:
      containers:
        - name: elastic-container
          image: bitnami/elasticsearch
          ports:
              - containerPort: 9200

---

apiVersion: v1
kind: Service
metadata:
  name: django-service
  namespace: cms
spec:
  type: NodePort
  selector:
    app: django-container
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: django
  labels:
    app: django
  namespace: cms
spec:
  replicas: 1
  selector:
    matchLabels:
      app: django-container
  template:
    metadata:
      labels:
        app: django-container
    spec:
      containers:
        - name: django
          image: cms/django:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 5432

---

apiVersion: v1
kind: Service
metadata:
  name: swift-service
  namespace: cms
spec:
  type: ClusterIP
  selector:
    app: swift-container
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: swift-deployment
  namespace: cms
spec:
  replicas: 1
  selector:
    matchLabels:
      app: swift-container
  template:
    metadata:
      labels:
        app: swift-container
    spec:
      containers:
        - name: swift-container
          image: swiftstack/picoswiftstack
          ports:
            - containerPort: 8080

---

apiVersion: v1
kind: Service
metadata:
  name: tika-service
  namespace: cms
spec:
  type: ClusterIP
  ports:
    - port: 9998
      targetPort: 9998
  selector:
    app: tika

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: tika-deployment
  namespace: cms
  labels:
    app: tika
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tika
  template:
    metadata:
      labels:
        app: tika
    spec:
      containers:
      - name: tika-container
        image: apache/tika:latest
        ports:
        - containerPort: 9998
